@model Model.SampleReceive

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <h2>Sample Receiving</h2>
          <p id="resultMessage"></p>
        <div class="form-group">
            @Html.LabelFor(model => model.SRID, new { @class = "control-label col-md-3 red" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.SRID)
                @Html.ValidationMessageFor(model => model.SRID)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NoOfProductReceived, new { @class = "control-label col-md-3 red" })
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.NoOfProductReceived, new { @class = "digit"})
                <span class="red">Product Received</span>
            </div>
        </div>
        <div id="dvProductReceived" class="form-group">
            @Html.Partial("~/Views/PartialView/ProductReceived.cshtml")
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NoOfTestRequired, new { @class = "control-label col-md-3 red" })
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.NoOfTestRequired, new { @class = "digit"})
            </div>
        </div>
        <div id="dvSampleTest" class="form-group">
            @Html.Partial("~/Views/PartialView/SampleTest.cshtml")
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.TargetDate, new { @class = "control-label col-md-3 red",@readonly= "readonly" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.TargetDate, new { @class = "datepicker" })
                @Html.ValidationMessageFor(model => model.TargetDate)
            </div>
        </div>
        <p>
            <input id="btnCreateSampleReceive" type="button" value="Create" />
            <input id="btnResetSampleReceive" type="button" value="Reset" class="cancel" />
        </p>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        /* This is change event for your dropdownlist */
        $(document).ready(function () {
            $('#TargetDate').datepicker({ startDate: new Date() });
            $("#NoOfProductReceived").val('@ViewBag.NoOfProductReceived');
            $("#NoOfTestRequired").val('@ViewBag.NoOfTestRequired');
        });

        $(".digit").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $("#NoOfProductReceived").on('keyup',function (e) {
            CreateProductReceivedView($(this).val());
        });

        $("#NoOfTestRequired").on('keyup', function (e) {
            CreateSampleTestView($(this).val());
        });

        $(".allownumericwithdecimal").on("keypress keyup blur", function (event) {
            $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });

        $("#btnCreateSampleReceive").click(function () {
            if (validate()) {
                var SampleReceiving = {};
                SampleReceiving.SRID = $("#SRID").val();
                SampleReceiving.NoOfProductReceived = $("#NoOfProductReceived").val();
                SampleReceiving.NoOfTestRequired = $("#NoOfTestRequired").val();
                SampleReceiving.TargetDate = new Date($("#TargetDate").val());
                SampleReceiving.lstProductRecieved = [];
                for (var i = 1; i <= SampleReceiving.NoOfProductReceived; i++) {
                    var productReceived = {
                        ProductID: $("#lstProductRecieved_" + i + "__ProductID").val(),
                        Quantity: $("#lstProductRecieved_" + i + "__Quantity").val(),
                        UOMID: $("#lstProductRecieved_" + i + "__UOMID").val()
                    }
                    SampleReceiving.lstProductRecieved.push(productReceived);
                }
                SampleReceiving.lstSampleTest = [];
                for (var i = 1; i <= SampleReceiving.NoOfTestRequired; i++) {
                    var SampleTest = {
                        TestID: $("#lstSampleTest_" + i + "__TestID").val(),
                        Repetition: $("#lstSampleTest_" + i + "__Repetition").val()
                    }
                    SampleReceiving.lstSampleTest.push(SampleTest);
                }

                $.ajax({
                    url: '/SampleReceiving/Create',
                    dataType: "json",
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(SampleReceiving),
                    async: true,
                    processData: false,
                    cache: false,
                    success: function (data) {
                        CreateProductReceivedView('@ViewBag.NoOfProductReceived');
                        CreateSampleTestView('@ViewBag.NoOfTestRequired');
                        $("#NoOfProductReceived").html('@ViewBag.NoOfProductReceived');
                        $("#NoOfTestRequired").html('@ViewBag.NoOfTestRequired');
                        $('input[type="text"]').val('');
                        $('input[type="datetime"]').val('');
                        $("textarea").val("");
                        $("#resultMessage").addClass("label-success").show().text('Record inserted successfully ');
                    },
                    error: function (xhr) {
                        if (xhr.status == 200) {
                            $("#NoOfProductReceived").val('@ViewBag.NoOfProductReceived');
                            $("#NoOfTestRequired").val('@ViewBag.NoOfTestRequired');
                            CreateProductReceivedView('@ViewBag.NoOfProductReceived');
                            CreateSampleTestView('@ViewBag.NoOfTestRequired')
                            $('input[type="text"]').val('');
                            $('input[type="datetime"]').val('');
                            $("textarea").val("");
                            $("#resultMessage").addClass("label-success").show().text('Record inserted successfully ');
                        }
                        else {
                            $("#resultMessage").addClass("label-warning").show().text('Error occured ');
                        }
                    }
                })
            }

         });

        $("#btnResetSampleReceive").click(function () {
            $('input[type="text"]').val('');
            $('input[type="datetime"]').val('');
            $(".validation-summary-errors").css("display", "none");
            $(".input-validation-error").removeClass("input-validation-error");
            $(".field-validation-error").children().remove();
            $("#NoOfProductReceived").val('@ViewBag.NoOfProductReceived');
            $("#NoOfTestRequired").val('@ViewBag.NoOfTestRequired');
            $(".fieldType").val('0')
            CreateProductReceivedView('@ViewBag.NoOfProductReceived');
            CreateSampleTestView('@ViewBag.NoOfTestRequired')
            $("#resultMessage").removeClass("label-success").removeClass("label-warning").text('').hide();
          });

        function CreateProductReceivedView(id) {
            /* Request the partial view with .get request. */
            $.get('/SampleReceiving/RenderProductReceivedView/' + id, function (data) {
                /* data is the pure html returned from action method, load it to your page */
                $('#dvProductReceived').html(data);
                /* little fade in effect */
                $('#dvProductReceived').fadeIn('fast');
            });
        }

        function CreateSampleTestView(id) {
            /* Request the partial view with .get request. */
            $.get('/SampleReceiving/RenderSampleTestView/' + id, function (data) {
                /* data is the pure html returned from action method, load it to your page */
                $('#dvSampleTest').html(data);
                /* little fade in effect */
                $('#dvSampleTest').fadeIn('fast');
            });
        }
       
        function validate() {
            //valid() not only tells us whether the form is valid but 
            //also ensures that errors are shown !!!
            if ($('form').valid()) {
                //if the form is valid we may need to hide previously displayed messages
                $(".validation-summary-errors").css("display", "none");
                $(".input-validation-error").removeClass("input-validation-error");
                return true;
            }
            else {
                //the form is not valide and because we are doing this all manually we also have to
                //show the validation summary manually 
                $(".validation-summary-errors").css("display", "block");
                return false;
            }
        }
    </script>
}